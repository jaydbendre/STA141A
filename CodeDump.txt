
```{r message = FALSE,warning = FALSE}
# Importing all the libraries required
library(ggplot2)
library(ipumsr)
library(tidyverse)
library(PerformanceAnalytics)
library(reshape2)
library(Hmisc)
library(plotly)
```

```{r}
# A. Loading the data and creating a dataframe
df_ddi <- read_ipums_ddi("Dataset/nhis_00001.xml")
df <- as.data.frame(read_ipums_micro(df_ddi, verbose = FALSE))
df %>% head(5)
```


## Exploratory Data Analysis

1. Looking at the class of the data
```{r}
race_labels <- c(attributes(df$RACEA)$labels)
#  A. Review classes
sapply(df, class)
# Note: some of the variables have attached data definitions "haven labeled"

# B. Check for missing values
sapply(df, function(x) sum(is.na(x)))
# all zeros

# C. Group variables
#  1. Personal/respondent info
per_info_vars <- c("AGE", "SEX", "MARSTAT", "RACEA", "SEXORIEN", "EDUC", "ASTATFLG", "CSTATFLG")

#  2. Educational background

#  3. Employment related variables

#  4. Health and coronavirus

```

2. Review variable distributions
```{r}
# A. Income vs
#  1. Race 
#   i. Combine like categories
unk <- c(580, 900, 970, 980, 990)

df <- df %>%
	mutate(race2 = ifelse(RACEA %in% unk, "Unknown", RACEA))

df %>% group_by(, race2) %>% summarize(n())
								
# 1 100 [White]                                                 28047
# 2 200 [Black/African-American]                                 3916
# 3 300 [Aleut, Alaskan Native, or American Indian]               287
# 4 350 [American Indian or Alaskan Native and any other group]   378
# 5 400 [Asian or Pacific Islander]                              2090
# 6 590 [Other Single and Multiple Races]                         679
# 7 970 [Unknown-refused]                                          20
# 8 980 [Unknown-not ascertained]                                1928
# 9 990 [Unknown (1997 forward: Don't know)]                       13

#   ii. 
ggplot(df, aes(FAMTOTINC, race2)) +
	geom_boxplot() +
	coord_flip()


#  2. Covid status
#   i. CVDDIAG (Ever told had or likely had coronavirus)

#   ii. CVDTESTRSLT Had coronavirus, according to test
# combine "unknown"
df <- df %>% mutate(CVDTESTRSLT2 = ifelse(CVDTESTRSLT > 2, 3, CVDTESTRSLT))

ggplot(df %>% filter(CVDTESTRSLT2 > 0), aes(CVDTESTRSLT2)) + 
	geom_histogram()

df_plt <- df %>% 
	group_by(race2,CVDTESTRSLT2) %>% 
	summarize(cnt = n())

ggplot(df_plt, aes(fill=race2, y=cnt, x=CVDTESTRSLT2)) + 
    geom_bar(position="dodge", stat="identity")

#  3. Education level
df %>% group_by(EDUC) %>% summarize(n())

#  1   0 [NIU]                                           5790 
#  2 102 [Never attended/kindergarten only]                59 none
#  3 103 [Grades 1-11 (no further detail)]               1981 
#  4 116 [12th grade, no diploma]                         422
#  5 201 [High school graduate]                          6823
#  6 202 [GED or equivalent]                              663
#  7 301 [Some college, no degree]                       4971
#  8 302 [AA degree: technical/vocational/occupational]  1219 
#  9 303 [AA degree: academic program]                   2916 
# 10 400 [Bachelor's degree (BA,AB,BS,BBA)]              7406
# 11 501 [Master's degree (MA,MS,Med,MBA)]               3723
# 12 502 [Professional (MD,DDS,DVM,JD)]                   518
# 13 503 [Doctoral degree (PhD, EdD)]                     718
# 14 997 [Unknown--refused]                                45 unknown
# 15 999 [Unknown--don't know]                            104 unknown 


attributes(df$EDUC)$labels

ggplot(df %>% mutate(EDUC2=as.factor(EDUC)), aes(FAMTOTINC, group=EDUC2)) +
	geom_boxplot() + coord_flip() +
	scale_x_discrete()

```


## Jays Analysis

#### Data Preprocessing and relevelling of the data

```{r}
# Extracting the variables necessary
work_condtn <- c("PAIDSICK","EMPHI","USUALPL","HINOTCOVE","CVDDIAG","CVDTEST","CVDTESTRSLT")

# Loading the data
work_condtn_df <- df %>% select(work_condtn) 

# Feature Engineering

# Mutating PAID SICK variables
#Labels:
# value                   label
#     0                     NIU
#     1                      No
#     2                     Yes
#     7         Unknown-refused
#     8 Unknown-not ascertained
#     9      Unknown-don't know

# Relevel 7,8,9 as 3 to be Unknown
# New Levels: 
#Labels:
# value                   label
#     0                     NIU
#     1                      No
#     2                     Yes
#     3         								Unknown


work_condtn_df <- work_condtn_df %>% mutate(PAIDSICK = as.factor(replace(PAIDSICK,PAIDSICK >4,3)))  

# Mutating EMPHI
# Same conversion as above
work_condtn_df <- work_condtn_df %>% mutate(EMPHI = as.factor(replace(EMPHI,EMPHI >4,3)))  

# Mutating USUALPL
# value                         label
#     0                           NIU
#     1       There is no place or No
#     2 Yes, has a usual place or Yes
#     3  There is more than one place
#     7               Unknown-refused
#     8       Unknown-not ascertained
#     9            Unknown-don't know

# Not a very important variable 
# 2-3 combined as 2 and 7,8,9 combined as 3
# New levels : 
# value                         label
#     0                           NIU
#     1       There is no place or No
#     2 							Yes, has a usual place 
#     3        							Unknown-refused

work_condtn_df <- work_condtn_df %>% 
	mutate(USUALPL = replace(USUALPL, USUALPL == 3,2))  

work_condtn_df <- work_condtn_df %>% 
	mutate(USUALPL = replace(USUALPL, USUALPL >= 7,3))  

work_condtn_df <- work_condtn_df %>% mutate(USUALPL = as.factor(USUALPL))
# Mutating HINOTCOVE
# value                   label
#    0                     NIU
#     1        No, has coverage
#     2    Yes, has no coverage
#     7         Unknown-refused
#     8 Unknown-not ascertained
#     9      Unknown-don't know

# Combine all unknowns into one
work_condtn_df <- work_condtn_df %>% mutate(HINOTCOVE = as.factor(replace(HINOTCOVE,HINOTCOVE >4,3)))  

# Mutating CVDTEST
# Same transformation as above
work_condtn_df <- work_condtn_df %>% mutate(CVDTEST = as.factor(replace(CVDTEST,CVDTEST >4,3)))  

# Mutating CVDDIAG
# Same transformation as above
work_condtn_df <- work_condtn_df %>% mutate(CVDDIAG = as.factor(replace(CVDDIAG,CVDDIAG >4,3)))  

# Mutating CVDTESTRSLTS
#Labels:
# value                   label
#     0                     NIU
#     1                      No
#     2                     Yes
#     3 Did not receive results
#     7         Unknown-refused
#     8 Unknown-not ascertained
#     9      Unknown-don't know

#Similar transformation where we combine all unknowns to 4
work_condtn_df <- work_condtn_df %>% mutate(CVDTESTRSLT = as.factor(replace(CVDTESTRSLT,CVDTESTRSLT >4,4)))  
```

#### Data Visualisation
```{r}
# Seeing number of people compensated for sick leaves and their diagnosis for covid

fig <- plot_ly(marker = list(colors = c("#FBB4AE","#B3CDE3","#CCEBC5","#DECBE4")))
sample_df <- work_condtn_df %>% filter(PAIDSICK == 0)
sample_df <- sample_df %>% group_by(CVDDIAG) %>% summarise(n = n())
fig <- fig %>% add_pie(data = sample_df, labels = ~CVDDIAG, values = ~n, type = 'pie',textinfo = 'label+percent',domain = list(row = 0, column = 0),marker = list("#66C2A5","#FC8D62","#8DA0CB","#E78AC3")) 

sample_df <- work_condtn_df %>% filter(PAIDSICK == 1)
sample_df <- sample_df %>% group_by(CVDDIAG) %>% summarise(n = n())
fig <- fig %>% add_pie(data = sample_df, labels = ~CVDDIAG, values = ~n, type = 'pie',textinfo = 'label+percent', domain = list(row = 0, column = 1)) 


sample_df <- work_condtn_df %>% filter(PAIDSICK == 2)
sample_df <- sample_df %>% group_by(CVDDIAG) %>% summarise(n = n())
fig <- fig %>% add_pie(data = sample_df, labels = ~CVDDIAG, values = ~n, type = 'pie',textinfo = 'label+percent',domain = list(row = 1, column = 0), text      = "Company Paid for leave") 

sample_df <- work_condtn_df %>% filter(PAIDSICK == 3)
sample_df <- sample_df %>% group_by(CVDDIAG) %>% summarise(n = n())
fig <- fig %>% add_pie(data = sample_df, labels = ~CVDDIAG, values = ~n, type = 'pie',textinfo = 'label+percent', domain = list(row = 1, column = 1)) 


fig <- fig %>% layout(title = "People Who were compensated vs Got Tested", showlegend = T, grid = list(rows = 2, columns = 2))

fig
```

```{r fig1, fig.width= 8, fig.height=8}
# Seeing the number of people who got tested given they have health insurance coverage from the company
sample_df <- work_condtn_df %>% group_by(HINOTCOVE,EMPHI) %>% dplyr::summarize(count = n())

ggplot(sample_df, aes(fill=EMPHI, y=count, x=EMPHI)) + 
    geom_bar(position="dodge", stat="identity") +
    ggtitle("Number of people who tested when they get Health insurance coverage from the Company") +
    facet_wrap(~HINOTCOVE, labeller = labeller(HINOTCOVE = c("1" = "Not Covered by Company", "2" = "Covered by Company", "3" = "Unknown" ))) +
    theme(legend.position="none") +
    xlab("Covid Test") + ylab("Frequency") + scale_x_discrete(labels = c("NIU","Negative","Positive","No Results")) + scale_fill_manual(values = c("#A6CEE3","#1F78B4","#B2DF8A","#33A02C")) + theme_minimal() + theme(plot.title = element_text(hjust = 0.5),axis.text.x = element_text(angle = 30))
```

```{r}
# Does having a usual place of testing affect the testing of the people
sample_df <- work_condtn_df %>% filter(USUALPL == 2)
sample_df <- sample_df %>% group_by(CVDTEST) %>% summarise(n = n())
sample_df %>% head()

x_labels <- list('NIU', 'Not Tested', 'Tested', 'Unknown')

fig <- plot_ly(sample_df, x = ~CVDTEST, y = ~n, type = 'bar',
        marker = list(color = c('rgba(204,204,204,1)', 'rgba(204,204,204,1)', 'rgba(222,45,38,0.8)','rgba(204,204,204,1)')))

fig <- fig %>% layout(title = "Seeing if having Usual Place of medical care encourages Covid Testing",
         xaxis = list(ticktext = x_labels,tickmode = "array"),
         yaxis = list(title = ""))

fig
```

There seems to be no effect

```{r}
prop.table(table(df$CVDDIAG,df$NHISHID),1)
```

## Ignats Analysis


```{r}
# A. Loading the data and creating a dataframe
df_ddi <- read_ipums_ddi("Dataset/nhis_00001.xml")
df <- as.data.frame(read_ipums_micro(df_ddi, verbose = FALSE))
df %>% head(5)
```


## Exploratory Data Analysis


### Relationships between Access to Care Variables and Testing Positive/Negative
```{r}
#Access to Care and General Coverage  

#Health Insurance coverage status: HINOTCOV
df <- df %>% mutate(CVDTESTRSLT2 = ifelse(CVDTESTRSLT > 2, 3, CVDTESTRSLT))
df <- df %>% mutate(CVDTEST2 = ifelse(CVDTEST > 2, 7, CVDTEST))
counts_hinc <- table(df$HINOTCOVE, df$CVDTESTRSLT2)

rownames(counts_hinc) <- c('Has coverage','No coverage','Unknown')
colnames(counts_hinc) <- c('NIU', 'Negative','Positive', 'Unknown')

#Stacked Barplots based on Having Health Insurance
#barplot(counts_hinc, col = rainbow(4),  legend = rownames(counts_hinc), main = 'Test Results based on Insurance Coverage', xlab = 'COVID Test Result')

barplot(counts_hinc[,2:3], col = rainbow(3:6),
        main = 'Test Results based on Insurance Coverage', legend = rownames(counts_hinc)[1:2], xlab = 'COVID Test Result')


#Has usual place for medical care: USUALPL 
  #combining Unknowns
df <- df %>% mutate(USUALPL2 = ifelse(USUALPL > 3, 7, USUALPL))
  #combining 1 usual place and more than 1 usual place 
df <- df %>% mutate(USUALPL3 = ifelse(USUALPL2 == 3, 2, USUALPL2))

counts_usualpl <- table(df$USUALPL3, df$CVDTESTRSLT2)
rownames(counts_usualpl) <- c('None', 'At least 1 place', 'Unknown')
colnames(counts_usualpl) <- c('NIU', 'Negative','Positive', 'Unknown')

#Stacked Barplots based on Usual Place
#barplot(counts_usualpl, col = rainbow(4:7),  = rownames(counts_usualpl), main = 'Test Results based on Having Usual Place', xlab = 'Test Results')

barplot(counts_usualpl[,2:3], col = rainbow(4),
        legend = rownames(counts_usualpl)[1:2], main = 'Test Results based on Having Usual Place', xlab = 'Test Results')

#Paid sick leave: PAIDSICK
  #combining Unknowns
df <- df %>% mutate(PAIDSICK2 = ifelse(PAIDSICK > 2, 7, PAIDSICK))

counts_ps <- table(df$PAIDSICK2, df$CVDTESTRSLT2)
rownames(counts_ps) <- c('NIU','No sick leave','Sick leave', 'Unknown')
colnames(counts_ps) <- c('NIU', 'Negative','Positive', 'Unknown')

#Stacked Barplots based on Sick Leave
#barplot(counts_ps, col = rainbow(4),  legend = rownames(counts_ps), main = 'Test Results based on having Sick Leave', xlab = 'Testing Opportunity')
barplot(counts_ps[2:3,2:3], col = rainbow(2), 
        legend = rownames(counts_ps)[2:3], main = 'Test Results based on having Sick Leave', xlab = 'Testing Opportunity')


#Workplace offered health insurance: EMPHI vs getting tested
  #combining unknowns
df <- df %>% mutate(EMPHI2 = ifelse(EMPHI > 2, 7, EMPHI))

counts_ehc <- table(df$EMPHI2, df$CVDTESTRSLT2)
rownames(counts_ehc) <- c('NIU','Not offered', 'Offered', 'Unknown')
colnames(counts_ehc) <- c('NIU', 'Negative','Positive', 'Unknown')
#Stacked Barplots based on Employer Insurance
#barplot(counts_ehc, col = rainbow(10:14), legend = rownames(counts_ehc), main = 'Test Results based on Employer HC', xlab = 'Testing Opportunity')
barplot(counts_ehc[2:3,2:3], col = rainbow(8:10), 
        legend = rownames(counts_ehc)[2:3], main = 'Test Results based on Employer HC', xlab = 'Testing Opportunity')

```
